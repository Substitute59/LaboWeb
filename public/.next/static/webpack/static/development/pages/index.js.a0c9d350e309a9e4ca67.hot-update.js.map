{"version":3,"file":"static/webpack/static/development/pages/index.js.a0c9d350e309a9e4ca67.hot-update.js","sources":["webpack:///./components/work.js"],"sourcesContent":["import AppBar from '@material-ui/core/AppBar';\nimport ReactMarkdown from 'react-markdown';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Carousel from 'react-img-carousel';\n\nclass Work extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      strapiUrl: this.props.strapiUrl,\n      classes: this.props.classes,\n      lang: this.props.lang,\n      open: false\n    };\n  }\n\n  toggleGallery = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  getProject = project => {\n    const { classes, strapiUrl, lang } = this.state;\n    let counter = 0;\n\n    return <Card>\n      <CardMedia\n        className={classes.projectimg}\n        image={strapiUrl + project.Image[project.Image.length - 1].url}\n        title={project.Titre}\n      />\n      <CardContent>\n        <div className={classes.projecttitle}>{project.Titre}</div>\n        <ReactMarkdown source={lang === 'en' ? project['Description courte anglais'] : project['Description courte']} className={classes.markdowwork} />\n        <Dialog\n          onClose={this.toggleGallery}\n          aria-labelledby=\"dialog-title\"\n          open={this.state.open}\n        >\n          <DialogTitle disableTypography id=\"dialog-title\" className={classes.modalheader}>\n            {project.Titre}\n          </DialogTitle>\n          <DialogContent className={classes.modalcontent}>\n            <Carousel width=\"100%\" height=\"100%\" slideWidth=\"100%\" slideHeight=\"auto\">\n              {project.Image.map(image => {\n                counter++;\n                return <img key={image._id} src={strapiUrl + image.url} alt={`Image ${counter}/${project.Image.length}`} className={classes.modalimg} />\n              })}\n            </Carousel>\n          </DialogContent>\n          <DialogActions className={classes.modalactions}>\n            <Button onClick={this.toggleGallery} className={classes.modalbutton}>\n              {lang === 'en' ? 'Close' : 'Fermer'}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </CardContent>\n      <CardActions className={classes.cardfooter}>\n        <IconButton href={project.Lien} target=\"_blank\">\n          <LaunchIcon />\n        </IconButton>\n        <IconButton onClick={this.toggleGallery}>\n          <PhotoLibraryIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  };\n\n  render() {\n    const { classes, hp, projects } = this.props;\n\n    return (\n      <div id=\"section-work\" className={classes.section}>\n        <AppBar position=\"static\" className={classes.appbar}>\n          {hp['Titre projets']}\n        </AppBar>\n        <div className={classes.card}>\n          <Grid container spacing={16}>\n            {projects.map(project => (\n              <Grid item xs={12} sm={6} md={4} key={project._id} className={classes.project}>\n                {this.getProject(project)}\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Work;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AAAA;AAAA;AACA;AACA;AAbA;AAcA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AA1DA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AAoDA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;;;;AAjFA;AACA;AAmFA;;;;A","sourceRoot":""}