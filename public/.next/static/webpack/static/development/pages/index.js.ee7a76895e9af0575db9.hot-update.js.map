{"version":3,"file":"static/webpack/static/development/pages/index.js.ee7a76895e9af0575db9.hot-update.js","sources":["webpack:///./components/drawerContent.js","webpack:///./node_modules/@material-ui/icons/Translate.js"],"sourcesContent":["import ReactMarkdown from 'react-markdown';\nimport ScrollspyNav from 'react-scrollspy-nav';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport SchoolIcon from '@material-ui/icons/School';\nimport EmailIcon from '@material-ui/icons/Email';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport TranslateIcon from '@material-ui/icons/Translate';\n\nclass DrawerContent extends React.Component {\n  closeDrawer = () => {\n    if (this.props.handleDrawerToggle) {\n      this.props.handleDrawerToggle();\n    }\n  };\n\n  render() {\n    const { classes, hp, strapiUrl, lang } = this.props;\n\n    return (\n      <div>\n        <ScrollspyNav scrollTargetIds={['home', 'section-about', 'section-skills', 'section-work', 'section-experience', 'section-education', 'section-contact']} activeNavClass=\"currentnav\" scrollDuration=\"200\">\n          <div className={classes.logo}>\n            <a href=\"#home\" onClick={this.closeDrawer}>\n              <img src={strapiUrl+hp.Logo.url} alt={hp.Titre} />\n            </a>\n            <ReactMarkdown source={hp['Titre du site']} />\n          </div>\n          <Divider />\n          <List component=\"nav\" className={classes.nav}>\n            <ListItem button component=\"a\" href=\"#section-about\" className={classes.navlink} onClick={this.closeDrawer}>\n              <ListItemIcon>\n                <PersonIcon className={classes.navicon} />\n              </ListItemIcon>\n              <ListItemText classes={{ primary: classes.navlinktext }} primary={hp['Titre à propos']} />\n            </ListItem>\n            <ListItem button component=\"a\" href=\"#section-skills\" className={classes.navlink} onClick={this.closeDrawer}>\n              <ListItemIcon>\n                <BarChartIcon className={classes.navicon} />\n              </ListItemIcon>\n              <ListItemText classes={{ primary: classes.navlinktext }} primary={hp['Titre compétences']} />\n            </ListItem>\n            <ListItem button component=\"a\" href=\"#section-work\" className={classes.navlink} onClick={this.closeDrawer}>\n              <ListItemIcon>\n                <DesktopMacIcon className={classes.navicon} />\n              </ListItemIcon>\n              <ListItemText classes={{ primary: classes.navlinktext }} primary={hp['Titre projets']} />\n            </ListItem>\n            <ListItem button component=\"a\" href=\"#section-experience\" className={classes.navlink} onClick={this.closeDrawer}>\n              <ListItemIcon>\n                <TrendingUpIcon className={classes.navicon} />\n              </ListItemIcon>\n              <ListItemText classes={{ primary: classes.navlinktext }} primary={hp['Titre expériences']} />\n            </ListItem>\n            <ListItem button component=\"a\" href=\"#section-education\" className={classes.navlink} onClick={this.closeDrawer}>\n              <ListItemIcon>\n                <SchoolIcon className={classes.navicon} />\n              </ListItemIcon>\n              <ListItemText classes={{ primary: classes.navlinktext }} primary={hp['Titre formations']} />\n            </ListItem>\n            <ListItem button component=\"a\" href=\"#section-contact\" className={classes.navlink} onClick={this.closeDrawer}>\n              <ListItemIcon>\n                <EmailIcon className={classes.navicon} />\n              </ListItemIcon>\n              <ListItemText classes={{ primary: classes.navlinktext }} primary={hp['Titre contact']} />\n            </ListItem>\n          </List>\n        </ScrollspyNav>\n        <Divider/>\n        <List className={classes.nav}>\n          <ListItem button component=\"a\" href={strapiUrl + hp.CV.url} className={classes.navlink} target=\"_blank\">\n            <ListItemIcon>\n              <DescriptionIcon className={classes.navicon} />\n            </ListItemIcon>\n            <ListItemText classes={{ primary: classes.navlinktext }} primary=\"CV\" />\n          </ListItem>\n          <ListItem button component=\"a\" href={lang === 'en' ? '/index' : '/en'} className={classes.navlink}>\n            <ListItemIcon>\n              <TranslateIcon className={classes.navicon} />\n            </ListItemIcon>\n            <ListItemText classes={{ primary: classes.navlinktext }} primary={lang === 'en' ? 'Version française' : 'English version'} />\n          </ListItem>\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default DrawerContent;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z\"\n})), 'Translate');\n\nexports.default = _default;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA5EA;AACA;AA8EA;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}